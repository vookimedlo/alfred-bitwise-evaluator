<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>cz.vookimedlo.alfred.bitwise</string>
	<key>connections</key>
	<dict>
		<key>2C30BD78-945A-45E4-BABD-E9CC6E1205B1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>BA6E1D05-03FA-4956-A72B-033FF191A3F2</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>61B36540-5E84-45FE-85E6-C5D503D1E576</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>2C30BD78-945A-45E4-BABD-E9CC6E1205B1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>812B545F-B4C1-4AE8-87EA-64A5ECB80CFE</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>BA6E1D05-03FA-4956-A72B-033FF191A3F2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>28EBC150-CB44-4260-96C1-B6104F348B74</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Michal Duda</string>
	<key>description</key>
	<string>Alfred 3 workflow for evaluating bitwise expressions.</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>BitwiseEvaluator</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>Result is ready in clipboard.</string>
				<key>title</key>
				<string>BitwiseEvaluator</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>28EBC150-CB44-4260-96C1-B6104F348B74</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>bw</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait, evaluation in progress...</string>
				<key>script</key>
				<string># https://github.com/vookimedlo/alfred-bitwise-evaluator
# GPLv3
#

##### sample bitwise (1|2)&lt;&lt;6&amp;~100^0b01

use strict;

my $query = '{query}';

if ($query=~m#^[\s0-9a-fA-F_&lt;|&gt;\~\-\+*/bx&amp;)(^]+$#)
  {
    my $answer = eval $query;

    if ($@)
      {
        print &amp;createErrorOutput("Cannot evaluate expression.", $query)
      }
    else
      {
        print &amp;createResultOutput($answer, $query);
      }
  }
else
  {
    # Contains illegal chars
    #
    print &amp;createErrorOutput("Cannot evaluate expression.", $query)
  }

sub createErrorOutput
  {
    my ($title, $subtitle) = @_;

    my $json = &lt;&lt;"END_JSON";
{"items": [
    {
        "title": "$title",
        "subtitle": "$subtitle",
        "arg": "error",
        "autocomplete": "$title",
        "icon": {
            "path": "icon-failure.png"
        },
    },
]}
END_JSON
  }

  sub createResultOutput
  {
    my ($resultDecimal, $query) = @_;
    my $resultBinary = "0b" . sprintf "%b", $resultDecimal;
    my $resultHex    = "0x" . sprintf "%X", $resultDecimal;
    my $resultOctal  = "0"  . sprintf "%o", $resultDecimal;

    my $json = &lt;&lt;"END_JSON";
{"items": [
    {
        "title": "$resultDecimal",
        "subtitle": "Decimal",
        "arg": "$resultDecimal",
        "autocomplete": "$resultDecimal",
        "icon": {
            "path": "icon.png"
        },
    },
    {
        "title": "$resultBinary",
        "subtitle": "Binary",
        "arg": "$resultBinary",
        "autocomplete": "$resultBinary",
        "icon": {
            "path": "icon.png"
        },
    },
    {
        "title": "$resultHex",
        "subtitle": "Hexadecimal",
        "arg": "$resultHex",
        "autocomplete": "$resultHex",
        "icon": {
            "path": "icon.png"
        },
    },
    {
        "title": "$resultOctal",
        "subtitle": "Octal",
        "arg": "$resultOctal",
        "autocomplete": "$resultOctal",
        "icon": {
            "path": "icon.png"
        },
    }
]}
END_JSON
  }
</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Result will be shown in decimal, binary, hexadecimal and octal form</string>
				<key>title</key>
				<string>Enter expression</string>
				<key>type</key>
				<integer>4</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>61B36540-5E84-45FE-85E6-C5D503D1E576</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>BA6E1D05-03FA-4956-A72B-033FF191A3F2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>inputstring</key>
				<string>{query}</string>
				<key>matchcasesensitive</key>
				<true/>
				<key>matchmode</key>
				<integer>1</integer>
				<key>matchstring</key>
				<string>error</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.filter</string>
			<key>uid</key>
			<string>2C30BD78-945A-45E4-BABD-E9CC6E1205B1</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>readonly latestTag=`curl -s https://api.github.com/repos/vookimedlo/alfred-bitwise-evaluator/releases/latest | grep browser_download_url | grep BitwiseEvaluator.alfredworkflow | cut -d '/' -f 8`

# THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vookimedlo/alfred-bitwise-evaluator/${latestTag}/src/info.plist"
readonly workflow_url=`curl -s https://api.github.com/repos/vookimedlo/alfred-bitwise-evaluator/releases/latest | grep browser_download_url | grep BitwiseEvaluator.alfredworkflow | cut -d '"' -f 4`
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  readonly local notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  readonly local terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>812B545F-B4C1-4AE8-87EA-64A5ECB80CFE</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>See https://github.com/vookimedlo/alfred-bitwise-evaluator</string>
	<key>uidata</key>
	<dict>
		<key>28EBC150-CB44-4260-96C1-B6104F348B74</key>
		<dict>
			<key>colorindex</key>
			<integer>10</integer>
			<key>note</key>
			<string>Bitwise Evaluator - notification about result in clipboard</string>
			<key>xpos</key>
			<integer>580</integer>
			<key>ypos</key>
			<integer>250</integer>
		</dict>
		<key>2C30BD78-945A-45E4-BABD-E9CC6E1205B1</key>
		<dict>
			<key>colorindex</key>
			<integer>10</integer>
			<key>note</key>
			<string>Bitwise Evaluator - check for error</string>
			<key>xpos</key>
			<integer>280</integer>
			<key>ypos</key>
			<integer>280</integer>
		</dict>
		<key>61B36540-5E84-45FE-85E6-C5D503D1E576</key>
		<dict>
			<key>colorindex</key>
			<integer>10</integer>
			<key>note</key>
			<string>Bitwise Evaluator</string>
			<key>xpos</key>
			<integer>80</integer>
			<key>ypos</key>
			<integer>250</integer>
		</dict>
		<key>812B545F-B4C1-4AE8-87EA-64A5ECB80CFE</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>390</integer>
			<key>ypos</key>
			<integer>500</integer>
		</dict>
		<key>BA6E1D05-03FA-4956-A72B-033FF191A3F2</key>
		<dict>
			<key>colorindex</key>
			<integer>10</integer>
			<key>note</key>
			<string>Bitwise Evaluator - result to clipboard</string>
			<key>xpos</key>
			<integer>390</integer>
			<key>ypos</key>
			<integer>250</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>2018.05.08</string>
	<key>webaddress</key>
	<string>https://github.com/vookimedlo/alfred-bitwise-evaluator</string>
</dict>
</plist>
